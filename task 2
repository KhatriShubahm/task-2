// C++ code
//
/*
  Ping))) Sensor

  This sketch reads a PING))) ultrasonic
  rangefinder and returns the distance to the
  closest object in range. To do this, it sends a
  pulse to the sensor to initiate a reading, then
  listens for a pulse to return.  The length of
  the returning pulse is proportional to the
  distance of the object from the sensor.

  The circuit:
   * +V connection of the PING))) attached to +5V
   * GND connection attached to ground
   * SIG connection attached to digital pin 7

  http://www.arduino.cc/en/Tutorial/Ping

  This example code is in the public domain.
*/

int inches = 0;

int cm = 0;

volatile long duration = 0; // declare volatile variable for duration

void pulse_ISR() // Interrupt Service Routine for the pulse
{
  if (digitalRead(echoPin) == HIGH) // if the echo pin is high
  {
    duration = pulseIn(echoPin, HIGH); // measure the duration of the pulse
  }
}

void setup()
{
  Serial.begin(9600);
  pinMode(triggerPin, OUTPUT); // Clear the trigger
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);

  // Attach interrupt to pin 2, using pulse_ISR function to handle the interrupt
  attachInterrupt(digitalPinToInterrupt(2), pulse_ISR, CHANGE);
}

void loop()
{
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  // calculate distance in cm
  cm = duration / 58.0;

  // convert to inches by dividing by 2.54
  inches = cm / 2.54;

  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.println("cm");

  delay(100); // Wait for 100 millisecond(s)
}
